[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "GEOSPATIAL ANALYTICS with R",
    "section": "",
    "text": "Content Disclaimer\n\n\n\n\n\nThis micro-site is intended as a personal portfolio and for sharing a learning journey only.\nOther than common facts or quotes from other parties, any views, opinions, or comments herein represented in this site are personal and belong solely to the site owner and do not represent those people, institutions or organisations that the owner may or may not be associated with professionally or within a personal capacity unless explicitly stated.\nThis site’s owner makes no representation of the accuracy or completeness of any display information or any link on this site. The owner will not be liable for any errors, omissions or availability of any information. The owner will not be liable for any of your losses, injuries, or damages from using the content within this site."
  },
  {
    "objectID": "ho/ho1_1.html",
    "href": "ho/ho1_1.html",
    "title": "Data Wrangling with R",
    "section": "",
    "text": "This post covers the basic wrangling technique for geospatial data such as -"
  },
  {
    "objectID": "ho/ho1_1.html#loading-r-packages",
    "href": "ho/ho1_1.html#loading-r-packages",
    "title": "Data Wrangling with R",
    "section": "1.1 Loading R Packages",
    "text": "1.1 Loading R Packages\nThe following are the packages required for the hands-on exercise :\n\n\n\n\n\n\n⇳ Usage of the code chunk below :\n\n\n\n\n\np_load( ) - pacman - to load packages into R environment. This function will attempt to install the package from CRAN or the pacman repository list if it is not installed.\n\n\n\n\npacman::p_load(sf, tidyverse)"
  },
  {
    "objectID": "ho/ho1_1.html#data-importation",
    "href": "ho/ho1_1.html#data-importation",
    "title": "Data Wrangling with R",
    "section": "1.2 Data Importation",
    "text": "1.2 Data Importation\n\n1.2.1 Import Geospatial Data\n\n\n\n\n\n\n⇳ Usage of the code chunk below :\n\n\n\n\n\nst_read( ) - sf- to read the shapefile into simple features data frame format with 2 arguments below :\n\ndsn - define data path.\nlayer - provide shapefile name.\n\n\n\n\n\n1.2.1.1 Polygon feature data in shapefile format\nImport Singapore Master Plan 2014 Subzone Boundary from data.gov.sg into mpsz simple feature data frame -\n\nmpsz = st_read(dsn = \"data/geospatial\",\n               layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `D:\\jephOstan\\geospatial_jtz\\ho\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nMetrics used in the output above -\n\nGeometry type : Refers to the type of shapes represented in the spatial data.\nDimension : “XY” means that the geometries are defined in a two-dimensional space with an X (longitude) and a Y (latitude) coordinate.\nBounding Box : The bounding box represents the extent of the spatial dataset, defined by the minimum and maximum coordinates in each dimension.\n\n“xmin”, “ymin”, “xmax”, and “ymax” represent the minimum longitude, minimum latitude, maximum longitude, and maximum latitude, respectively.\n\nProjected CRS : Coordinate Reference System (CRS) is a system that uses one or more numbers or coordinates to determine the position of a point or a geometric element uniquely.\nSVY21 is a specific type of CRS, which stands for the Singapore Transverse Mercator projection, used for creating maps and conducting land surveys in Singapore.\n\n\n\n1.2.1.2 Polyline feature data in shapefile format\nImport cycling path from LTADataMall.\n\ncyclingPath = st_read(dsn = \"data/geospatial\",\n                      layer = \"CyclingPath\")\n\nReading layer `CyclingPath' from data source \n  `D:\\jephOstan\\geospatial_jtz\\ho\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 2248 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21\n\n\n\n\n1.2.1.3 GIS data in kml format\n\npreschool = st_read(\"data/geospatial/pre-schools-location-kml.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `D:\\jephOstan\\geospatial_jtz\\ho\\data\\geospatial\\pre-schools-location-kml.kml' \n  using driver `KML'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\nUnlike SVY21 for other dataset, this preschool dataset is WGS 84 - which stands for World Geodetic System 1984 - a global reference coordinate system used by the Global Positioning System (GPS).\n\n\n\n1.2.2 Import Aspatial Data\n\n\n\n\n\n\n⇳ Usage of the code chunk below :\n\n\n\n\n\nread_csv( ) - readr - to read a CSV file.\n\n\n\n\nlistings &lt;- read_csv(\"data/aspatial/listings.csv\")"
  },
  {
    "objectID": "ho/ho1_1.html#data-inspection",
    "href": "ho/ho1_1.html#data-inspection",
    "title": "Data Wrangling with R",
    "section": "1.3 Data Inspection",
    "text": "1.3 Data Inspection\n\n1.3.1 Retrieve Information\n\n\n\n\n\n\n⇳ Usage of the code chunk below :\n\n\n\n\n\nst_geometry( ) - sf- to get geometry information from an sf object.\n\n\n\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nWith “mpsz$geom” or specifically indiate the position of the geometry column, “mpsz[[1]]” can also produced the same output as shown above.\n\n\n\n\n\n\n⇳ Usage of the code chunk below :\n\n\n\n\n\nglimpse( ) - dplyr- to reveals the data type of each feature / variable. Specify an integer behind to reveal the amount of information to be displayed.\n\ndbl shorts for “Double-precision” value.\n\n\n\n\n\nglimpse(mpsz,60)\n\nRows: 323\nColumns: 16\n$ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, …\n$ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1…\n$ SUBZONE_N  &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT Q…\n$ SUBZONE_C  &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\",…\n$ CA_IND     &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RI…\n$ PLN_AREA_C &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CE…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR…\n$ INC_CRC    &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\",…\n$ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 20…\n$ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83,…\n$ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77,…\n$ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625,…\n$ SHAPE_Area &lt;dbl&gt; 1630379.3, 559816.2, 160807.5, 595428.9…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 3…\n\n\n\n\n\n\n\n\n⇳ Usage of the code chunk below :\n\n\n\n\n\nhead( ) - utils - to return the top n features of mpsz. If n is not specified, top 6 (default) features will be displayed instead. Directly specified the integer works as well.\n\n\n\n\nhead(mpsz, n = 2)\n\nSimple feature collection with 2 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 28160.23 ymin: 28369.47 xmax: 32362.39 ymax: 30177.73\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO    SUBZONE_N SUBZONE_C CA_IND   PLN_AREA_N PLN_AREA_C\n1        1          1 MARINA SOUTH    MSSZ01      Y MARINA SOUTH         MS\n2        2          1 PEARL'S HILL    OTSZ01      Y       OUTRAM         OT\n        REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR\n1 CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84 29220.19\n2 CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06 29782.05\n  SHAPE_Leng SHAPE_Area                       geometry\n1   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n\n\n\n\n\n\n\n\n⇳ Usage of the code chunk below :\n\n\n\n\n\nlist( ) - base - to create a tibble data frame that contain all different types of variables in &lt;listings&gt;.\n\n\n\n\nlist(listings)\n\n[[1]]\n# A tibble: 4,161 × 18\n       id name      host_id host_name neighbourhood_group neighbourhood latitude\n    &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;               &lt;chr&gt;            &lt;dbl&gt;\n 1  50646 Pleasant…  227796 Sujatha   Central Region      Bukit Timah       1.33\n 2  71609 Ensuite …  367042 Belinda   East Region         Tampines          1.35\n 3  71896 B&B  Roo…  367042 Belinda   East Region         Tampines          1.35\n 4  71903 Room 2-n…  367042 Belinda   East Region         Tampines          1.35\n 5 275344 15 mins … 1439258 Kay       Central Region      Bukit Merah       1.29\n 6 289234 Booking …  367042 Belinda   East Region         Tampines          1.34\n 7 294281 5 mins w… 1521514 Elizabeth Central Region      Newton            1.31\n 8 324945 Cozy Blu… 1439258 Kay       Central Region      Bukit Merah       1.29\n 9 330089 Cozy Blu… 1439258 Kay       Central Region      Bukit Merah       1.29\n10 330095 10 mins … 1439258 Kay       Central Region      Bukit Merah       1.29\n# ℹ 4,151 more rows\n# ℹ 11 more variables: longitude &lt;dbl&gt;, room_type &lt;chr&gt;, price &lt;dbl&gt;,\n#   minimum_nights &lt;dbl&gt;, number_of_reviews &lt;dbl&gt;, last_review &lt;date&gt;,\n#   reviews_per_month &lt;dbl&gt;, calculated_host_listings_count &lt;dbl&gt;,\n#   availability_365 &lt;dbl&gt;, number_of_reviews_ltm &lt;dbl&gt;, license &lt;chr&gt;\n\n\nFrom the output above, latitude and longitude are in decimal degree format, which best assumes it’s in wgs84 Geographic Coordinate System."
  },
  {
    "objectID": "ho/ho1_1.html#data-visualisation",
    "href": "ho/ho1_1.html#data-visualisation",
    "title": "Data Wrangling with R",
    "section": "1.4 Data Visualisation",
    "text": "1.4 Data Visualisation\n\n1.4.1 Retrieve Information\n\n\n\n\n\n\n⇳ Usage of the code chunk below :\n\n\n\n\n\nplot( ) - graphics - to visualise geospatial features.\n\n\n\n\nplot(mpsz)\n\n\n\n\nPlot only the boundaries - combine both plot( ) together with st_geometry( ) to specifically get the geometry details for plot( ) to plot.\n\nplot(st_geometry(mpsz))\n\n\n\n\nor, specifically indicate which attribute / variable to plot.\n\nplot(mpsz[\"PLN_AREA_N\"])"
  },
  {
    "objectID": "ho/ho1_1.html#projection-transformation",
    "href": "ho/ho1_1.html#projection-transformation",
    "title": "Data Wrangling with R",
    "section": "2.1 Projection Transformation",
    "text": "2.1 Projection Transformation\n\n2.1.1 Inspect & Edit the EPSG Code\n2 common issues encountered when importing geospatial data -\n\nShapefile with missing .proj file.\nThe projected CRS is wrongly assigned.\n\n\n\n\n\n\n\n⇳ Usage of the code chunk below :\n\n\n\n\n\nst_crs( ) - sf - to retrieve coordinate reference system for mpsz.\n\n\n\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nThe EPSG code for “svy21” should be 3414, not 9001 as shown above.\n\n\n\n\n\n\n⇳ Usage of the code chunk below :\n\n\n\n\n\nst_set_crs( ) - sf - to replace the coordinate reference system for mpsz.\n\n\n\n\nmpsz3414 &lt;- st_set_crs(mpsz, 3414)\n\n\n\n2.1.2 Transform Geographic Coordinate System to Projected CRS\n\n\n\n\n\n\n⇳ Usage of the code chunk below :\n\n\n\n\n\nst_transform( ) - sf - to reproject x from one coordinate system wgs84 to svy21 mathematically, which is not capable by st_set_crs( ).\n\n\n\n\npreschool3414 &lt;- st_transform(preschool, \n                              crs = 3414)"
  },
  {
    "objectID": "ho/ho1_1.html#aspatial-data-frame-transformation",
    "href": "ho/ho1_1.html#aspatial-data-frame-transformation",
    "title": "Data Wrangling with R",
    "section": "2.2 Aspatial Data Frame Transformation",
    "text": "2.2 Aspatial Data Frame Transformation\n\n\n\n\n\n\n⇳ Usage of the code chunk below :\n\n\n\n\n\nst_as_sf( ) - sf - to convert aspatial object, i.e., listings to an sf object.\n\ncoords - provide x-coordinates first before y-coordinates.\ncrs - define the coordinates reference system with EPSG : 4326 ( wgs84 Geographic Coordinate System)\n%&gt;% - to nest st_transform( ) to transform the newly created simple feature data frame into EPSG : 3414 which is Singapore’s SVY21 projected CRS.\n\n\n\n\n\nlistings_sf &lt;- st_as_sf(listings,\n                        coords = c(\"longitude\", \"latitude\"),\n                        crs = 4326) %&gt;%\n  st_transform(crs = 3414)\n\n\nglimpse(listings_sf, 70)\n\nRows: 4,161\nColumns: 17\n$ id                             &lt;dbl&gt; 50646, 71609, 71896, 71903, 2…\n$ name                           &lt;chr&gt; \"Pleasant Room along Bukit Ti…\n$ host_id                        &lt;dbl&gt; 227796, 367042, 367042, 36704…\n$ host_name                      &lt;chr&gt; \"Sujatha\", \"Belinda\", \"Belind…\n$ neighbourhood_group            &lt;chr&gt; \"Central Region\", \"East Regio…\n$ neighbourhood                  &lt;chr&gt; \"Bukit Timah\", \"Tampines\", \"T…\n$ room_type                      &lt;chr&gt; \"Private room\", \"Private room…\n$ price                          &lt;dbl&gt; 80, 145, 85, 85, 49, 184, 79,…\n$ minimum_nights                 &lt;dbl&gt; 92, 92, 92, 92, 60, 92, 92, 6…\n$ number_of_reviews              &lt;dbl&gt; 18, 20, 24, 47, 14, 12, 133, …\n$ last_review                    &lt;date&gt; 2014-12-26, 2020-01-17, 2019…\n$ reviews_per_month              &lt;dbl&gt; 0.18, 0.15, 0.18, 0.34, 0.11,…\n$ calculated_host_listings_count &lt;dbl&gt; 1, 6, 6, 6, 44, 6, 7, 44, 44,…\n$ availability_365               &lt;dbl&gt; 365, 340, 265, 365, 296, 285,…\n$ number_of_reviews_ltm          &lt;dbl&gt; 0, 0, 0, 0, 1, 0, 0, 3, 2, 0,…\n$ license                        &lt;chr&gt; NA, NA, NA, NA, \"S0399\", NA, …\n$ geometry                       &lt;POINT [m]&gt; POINT (22646.02 35167.9…\n\n\nA new column, geometry is introduced while longitude & latitude are dropped from the data frame."
  },
  {
    "objectID": "ho/ho1_1.html#buffering",
    "href": "ho/ho1_1.html#buffering",
    "title": "Data Wrangling with R",
    "section": "3.1 Buffering",
    "text": "3.1 Buffering\nBuffering is a GIS technique to define an area bidirectional or setback of distance or width from a geographic feature (point, line or polygon).\nBelow are some of use cases for this GIS technique -\n\nEcological Studies: Determining impact zones around protected wildlife areas to analyse potential effects of human activities on habitats.\nUrban Planning: Establishing zones around public facilities like schools or hospitals to evaluate accessibility for nearby residents.\nTransportation Engineering: Assessing areas within a certain radius of public transit lines to optimise service coverage and planning.\nEmergency Preparedness: Creating zones around industrial plants to simulate the extent of potential chemical spills for evacuation planning.\nMarket Analysis: Defining catchment areas around retail stores to understand the demographic profile of potential customers living within a specific distance.\nEnvironmental Protection: Designating buffer zones around rivers or lakes to protect water quality from adjacent land-use activities.\nRisk Assessment: Evaluating flood risk by creating buffers along waterways that might overflow, affecting adjacent areas.\nAgricultural Management: Determining pesticide-free zones around crop fields by buffering from schools or residential areas.\nPublic Safety: Analysing crime incidence by creating buffers around areas of interest, such as nightlife districts, to allocate police resources effectively.\nTelecommunications: Planning network infrastructure by buffering around existing cell towers to identify areas with weak signal coverage for improvement.\n\n\n3.1.1 Create buffer distance\n\n\n\n\n\n\n⇳ Usage of the code chunk below :\n\n\n\n\n\nst_buffer( ) - sf - to set geometric unary operation.\n\ndist - to set 5 metre buffer distance for cyclingpath.\nnQuadSegs - to set number of segments per quadrant.\n\n\n\n\n\nbuffer_cycling &lt;- st_buffer(cyclingPath, \n                            dist = 5, \n                            nQuadSegs = 30)\n\n\n\n3.1.2 Calculate buffer / area\n\n\n\n\n\n\n⇳ Usage of the code chunk below :\n\n\n\n\n\nst_area( ) - sf - to compute the buffered area in buffer_cycling . The area is introduced under a new attribute area.\nnote - if st_area on cyclingPath will have 0 m2 for area.\n\n\n\n\nbuffer_cycling$area &lt;- st_area(buffer_cycling)\n\n\nsum(buffer_cycling$area)\n\n1556978 [m^2]"
  },
  {
    "objectID": "ho/ho1_1.html#point-in-polygon-pip-count",
    "href": "ho/ho1_1.html#point-in-polygon-pip-count",
    "title": "Data Wrangling with R",
    "section": "3.2 Point-in-Polygon (PIP) Count",
    "text": "3.2 Point-in-Polygon (PIP) Count\nThis GIS technique is used to determine how many point features (such as locations of schools, hospitals, or crime incidents) fall within polygon features (like municipal boundaries, neighborhoods, or zones).\nThis technique is very useful for understanding the distribution and concentration of features across a geographic area and can inform policy decisions, resource allocation, or identify trends and patterns in spatial data.\n\n3.2.1 Intersection & calculate\n\n\n\n\n\n\n⇳ Usage of the code chunk below :\n\n\n\n\n\nst_intersects( ) - sf - to identify pre-schools located inside each Planning Subzone.\nlength( ) - base - to aggregate and count the intersection points within each Planning Subzone.\n\n\n\n\nmpsz3414$`PreSch Count`&lt;- lengths(st_intersects(mpsz3414, preschool3414))\n\n\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    3.00    5.96    9.00   58.00 \n\n\n\n\n3.2.2 Sort listing\n\n\n\n\n\n\n⇳ Usage of the code chunk below :\n\n\n\n\n\ntop_n( x , n, wt) - dplyr - to list the Planning Subzone with the most pre-schools.\n\nx - a data frame, in this case, mpsz3414\nn - number of rows returned.\nwt - the variable for the sorting. If not specified, the last column will be used by default.\n\n\n\n\n\ntop_n(mpsz3414, 3, `PreSch Count`)\n\nSimple feature collection with 3 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 23449.05 ymin: 33973.71 xmax: 42940.57 ymax: 47996.47\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2  TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n2      199          4    BEDOK NORTH    BDSZ04      N      BEDOK         BD\n3      290          3 WOODLANDS EAST    WDSZ03      N  WOODLANDS         WD\n      REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR\n1  EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39\n2  EAST REGION       ER A2254301F85C1EDF 2014-12-05 39429.21 34737.62\n3 NORTH REGION       NR C90769E43EE6B0F2 2014-12-05 24506.64 46991.63\n  SHAPE_Leng SHAPE_Area                       geometry PreSch Count\n1  10180.624    4339824 MULTIPOLYGON (((42196.76 38...           58\n2   8414.962    3203663 MULTIPOLYGON (((40284.24 35...           31\n3   6603.608    2553464 MULTIPOLYGON (((24786.75 46...           47\n\n\n\n\n3.2.3 Compute density\nFirst step is to derive the area of each Planning Subzone under mpsz3414.\n\nmpsz3414$Area &lt;- mpsz3414 %&gt;%\n  st_area()\n\nSecond step is to compute the density with the mutate function.\n\nmpsz3414 &lt;- mpsz3414 %&gt;%\n  mutate(`PreSch Density` = `PreSch Count` / Area * 1000000)"
  },
  {
    "objectID": "ho/ho1_1.html#histogram",
    "href": "ho/ho1_1.html#histogram",
    "title": "Data Wrangling with R",
    "section": "4.1 Histogram",
    "text": "4.1 Histogram\nFor quick assessment or non-publication usage -\n\nhist(mpsz3414$`PreSch Density`)\n\n\n\n\nFor a more fine-tuned / customised histogram -\n\nggplot(data = mpsz3414, \n       aes(x = as.numeric(`PreSch Density`))) +\n  geom_histogram(bins = 20, \n                 color = \"white\", \n                 fill = \"salmon\") +\n  labs(title = \"DISTRIBUTION OF PRE-SCHOOL DENSITY ACROSS SGP PLANNING SUBZONES\",\n       subtitle = \"The histogram illustrates a right-skewed distribution of pre-school density per square kilometre across Planning Subzones. \\nThe tail of the distribution extends to the right, indicating outliers or exceptional Subzones \\nwith preschool densities considerably above the norm.\",\n       x = \"Pre-school Density (per km sq)\",\n       y = \"Frequency\") +\n  theme(plot.title = element_text (size = 14, \n                                   colour = \"#302f2f\",\n                                   face = \"bold\"),\n        plot.subtitle = element_text(size = 9.5,\n                                     colour = \"#424242\",\n                                     face = \"italic\"))"
  },
  {
    "objectID": "ho/ho1_1.html#scatterplot",
    "href": "ho/ho1_1.html#scatterplot",
    "title": "Data Wrangling with R",
    "section": "4.2 Scatterplot",
    "text": "4.2 Scatterplot\nShow relationship between Pre-school Density and Pre-school Count.\n\nggplot(data = mpsz3414, \n       aes(y = `PreSch Count`, \n           x = as.numeric(`PreSch Density`))) +\n  geom_point(color = \"black\", \n             fill = \"salmon\") +\n  xlim(0, 40) +\n  ylim(0, 40) +\n  labs(title = \"SPATIAL DISTRIBUTION OF SINGAPORE PRE-SCHOOL FACILITIES\",\n       subtitle = \"Correlation Between Pre-School Count and Density per Square Kilometer Across Subzones\",\n       x = \"Pre-school density (per km sq)\",\n       y = \"Pre-school count\") +\n  theme(plot.title = element_text (size = 14, \n                                   colour = \"#302f2f\",\n                                   face = \"bold\"),\n        plot.subtitle = element_text(size = 11,\n                                     colour = \"#424242\",\n                                     face = \"italic\"))"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Profile",
    "section": "",
    "text": "Name : Joseph Zexeong Tan\nResidency : Singapore Permanent Resident\nLanguage Proficiency : English, Mandarin, Malay, Dialect-Cantonese, Dialect-Hokkien, French (elementary).\nInterests : Volunteering to clean up Pulau Ubin, endurance-multi-sports (swim, cycle, run) workout.\nAwards : 2nd runner up in both Sudoku tournaments (2007, 2008) when pursuing my undergrad degree at UMS."
  },
  {
    "objectID": "about.html#working-experiences",
    "href": "about.html#working-experiences",
    "title": "Profile",
    "section": "WORKING EXPERIENCES",
    "text": "WORKING EXPERIENCES\n\nSoftware Solutions Consultancy\n\nproject management, quality assurance, UI/UX design, digital marketing, account supports, business development, end-user trainer\n\n\n\nEnvironmental Consultancy\n\nenvironmental impact assessment (EIA) consultant\n\n\n\nWall & Glass Decal & Retail\n\noperational management, designer, installer\n\n\n\nFood & Beverages\n\noperational management, business co-owner"
  },
  {
    "objectID": "ho/ho1_2.html",
    "href": "ho/ho1_2.html",
    "title": "Choropleth Mapping",
    "section": "",
    "text": "This post explores the functions in R to plot choropleth maps."
  },
  {
    "objectID": "ho/ho1_2.html#loading-r-packages",
    "href": "ho/ho1_2.html#loading-r-packages",
    "title": "Choropleth Mapping",
    "section": "1.1 Loading R Packages",
    "text": "1.1 Loading R Packages\nThe following are the packages required for the hands-on exercise :\n\n\n\n\n\n\n⇳ Usage of the code chunk below :\n\n\n\n\n\np_load( ) - pacman - to load packages into R environment. This function will attempt to install the package from CRAN or the pacman repository list if it is not installed.\n\n\n\n\npacman::p_load(sf, tmap, tidyverse)"
  },
  {
    "objectID": "ho/ho1_2.html#data-importation",
    "href": "ho/ho1_2.html#data-importation",
    "title": "Choropleth Mapping",
    "section": "1.2 Data Importation",
    "text": "1.2 Data Importation\n\n1.2.1 Import Geospatial Data\nImport Singapore Urban Redevelopment Authority(URA) Master Plan 2014 Subzone Boundary from data.gov.sg into mpsz simple feature data frame -\n\n\n\n\n\n\n⇳ Usage of the code chunk below :\n\n\n\n\n\nst_read( ) - sf- to read the shapefile into simple features data frame format with 2 arguments below :\n\ndsn - define data path.\nlayer - provide shapefile name.\n\n\n\n\n\nmpsz = st_read(dsn = \"data/geospatial\",                \n               layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `D:\\jephOstan\\geospatial_jtz\\ho\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\n1.2.2 Import Aspatial Data\nImport Singapore Urban Redevelopment Authority(URA) Master Plan 2014 Subzone Boundary from data.gov.sg into mpsz simple feature data frame -\n\n\n\n\n\n\n⇳ Usage of the code chunk below :\n\n\n\n\n\nread_csv( ) - readr - to read a CSV file.\n\n\n\n\npopdata &lt;- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")"
  },
  {
    "objectID": "ho/ho1_2.html#data-inspection",
    "href": "ho/ho1_2.html#data-inspection",
    "title": "Choropleth Mapping",
    "section": "1.3 Data Inspection",
    "text": "1.3 Data Inspection\n\n1.3.1 Retrieve Information\n\nglimpse(popdata,60)\n\nRows: 984,656\nColumns: 7\n$ PA   &lt;chr&gt; \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"An…\n$ SZ   &lt;chr&gt; \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Ce…\n$ AG   &lt;chr&gt; \"0_to_4\", \"0_to_4\", \"0_to_4\", \"0_to_4\", \"0_to…\n$ Sex  &lt;chr&gt; \"Males\", \"Males\", \"Males\", \"Males\", \"Males\", …\n$ TOD  &lt;chr&gt; \"HDB 1- and 2-Room Flats\", \"HDB 3-Room Flats\"…\n$ Pop  &lt;dbl&gt; 0, 10, 30, 50, 0, 0, 40, 0, 0, 10, 30, 60, 0,…\n$ Time &lt;dbl&gt; 2011, 2011, 2011, 2011, 2011, 2011, 2011, 201…"
  },
  {
    "objectID": "ho/ho1_2.html#data-wrangling",
    "href": "ho/ho1_2.html#data-wrangling",
    "title": "Choropleth Mapping",
    "section": "2.1 Data Wrangling",
    "text": "2.1 Data Wrangling\nFollowing are the additional variables will be needed for later choropleth plotting -\n\nYOUNG : age group 0 to 4 until age group 20 to 24.\nECONOMY ACTIVE : age group 25 - 29 until age group 60 - 64.\nAGED : age group 65 and above.\nTOTAL : all age groups.\nDEPENDENCY : the ratio between young & aged against the economy active group.\n\n\n\n\n\n\n\n⇳ Usage of the code chunk below :\n\n\n\n\n\npivot_wider( ) - tidyr - to create new columns with column name based on AG & values based on pop.\nmutate( ) - dplyr - to create new columns as mentioned above.\nfilter( ) - dplyr - to keep only 2020 for Time attribute.\ngroup_ by( ) - dplyr - to group 3 variables - PA, SZ and AG.\nselect( ) - dplyr - to keep only variables that mentioned.\n\n\n\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup() %&gt;%\n  pivot_wider(names_from = AG, values_from = POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6]) + rowSums(.[12])) %&gt;%\n  mutate(`ECONOMY ACTIVE` = rowSums(.[7:11]) + rowSums(.[13:15])) %&gt;% \n  mutate(`AGED` = rowSums(.[16:21])) %&gt;%\n  mutate(`TOTAL` = rowSums(.[3:21])) %&gt;%\n  mutate(`DEPENDENCY` = (`YOUNG` + `AGED`)/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`,`SZ`,`YOUNG`,`ECONOMY ACTIVE`,`AGED`,`TOTAL`,`DEPENDENCY`)"
  },
  {
    "objectID": "ho/ho1_2.html#merging-geospatial-aspatial-data",
    "href": "ho/ho1_2.html#merging-geospatial-aspatial-data",
    "title": "Choropleth Mapping",
    "section": "2.2 Merging Geospatial & Aspatial Data",
    "text": "2.2 Merging Geospatial & Aspatial Data\n\n\n\n\n\n\n⇳ Usage of the code chunk below :\n\n\n\n\n\nmutate_at( ) - dplyr - to modify specified columns PA and SZ in popdata2020.\n\n.fun argument to indicates the function, i.e. touper( ) applying on the specified columns. This function is to convert all text to uppercase in order to match the uppercase in the geospatial dataset.\n\nleft_join( ) - dplyr - to keep all observations in mpsz. This is an outer joins.\nwrite_rds( ) - readr - to serialise mpsz_pop2020. By default, no compression as space is cheaper than time.\n\n\n\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ),\n            .funs = list(toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\n\nwrite_rds(mpsz_pop2020, \"data/mpszpop2020.rds\")"
  },
  {
    "objectID": "ho/ho1_2.html#mapping-with-tmap",
    "href": "ho/ho1_2.html#mapping-with-tmap",
    "title": "Choropleth Mapping",
    "section": "3.1 Mapping with tmap",
    "text": "3.1 Mapping with tmap\n\n3.1.1 Plot with qtm( )\n\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020,\n    fill = \"DEPENDENCY\")"
  }
]